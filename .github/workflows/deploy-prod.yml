name: Deploy to Firebase Labs Production

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Type "DEPLOY-TO-PRODUCTION" to confirm deployment'
        required: true
        default: ''

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event.inputs.confirm == 'DEPLOY-TO-PRODUCTION'

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Setup PNPM
        uses: pnpm/action-setup@v3
        with:
          version: '10.10.0'

      - name: Install Root Dependencies
        run: pnpm install
      
      - name: Install Health Function Dependencies
        working-directory: backend/health
        run: pnpm install
      
      - name: Build & Lint Health Function
        working-directory: backend/health
        run: |
          pnpm run lint
          pnpm run build

      - name: Set up Firebase CLI
        run: npm install -g firebase-tools
      
      - name: Deploy Functions and Remote Config to Production
        run: firebase deploy --project fir-labs-prod --only functions,remoteconfig --force
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN_PROD }}
          NODE_ENV: production

      - name: Authenticate to Google Cloud (WIF)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER_PROD }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_PROD }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 474.0.0'

      - name: Enforce IAM invoker (remove public, add admins)
        env:
          GCP_PROJECT: fir-labs-prod
          FUNCTION_NAME: health
          REGION: us-central1
          ADMIN_USER_EMAIL: ${{ secrets.ADMIN_USER_EMAIL }}
          INVOKER_SA_EMAIL: ${{ secrets.INVOKER_SA_EMAIL_PROD }}
        run: |
          set -euo pipefail
          # Remove public access if present (ignore errors)
          gcloud functions remove-iam-policy-binding "$FUNCTION_NAME" \
            --region="$REGION" --gen2 \
            --member="allUsers" \
            --role="roles/cloudfunctions.invoker" || true
          
          # Add admin user invoker
          gcloud functions add-iam-policy-binding "$FUNCTION_NAME" \
            --region="$REGION" --gen2 \
            --member="user:$ADMIN_USER_EMAIL" \
            --role="roles/cloudfunctions.invoker"
          
          # Add service account invoker for automation/other services
          gcloud functions add-iam-policy-binding "$FUNCTION_NAME" \
            --region="$REGION" --gen2 \
            --member="serviceAccount:$INVOKER_SA_EMAIL" \
            --role="roles/cloudfunctions.invoker"
